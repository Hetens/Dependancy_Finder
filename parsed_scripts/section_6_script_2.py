### Script 2

The test script generated by the TestGenerator tool is a Python script that tests the existence and contents of the file, as well as the functionality of the InitializeRealTimeClock function. 

Here is the Python script that meets the requirements:

```python
import os
import unittest
from unittest.mock import patch
from edk2toollib.uefi import UefiFile

class TestRealTimeClock(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        # Set up test environment
        cls.test_dir = os.path.dirname(os.path.abspath(__file__))
        cls.coverage_files = ['vram\\\\EmulatorPkg\\\\RealTimeClockRuntimeDxe\\\\RealTimeClock.c']
        cls.task = 'InitializeRealTimeClock'

    def test_file_exists(self):
        # Test if the file exists
        file_path = os.path.join(self.test_dir, self.coverage_files[0])
        self.assertTrue(os.path.exists(file_path))

    def test_file_contents(self):
        # Test if the file contents are as expected
        file_path = os.path.join(self.test_dir, self.coverage_files[0])
        with open(file_path, 'r') as f:
            file_contents = f.read()
        self.assertGreater(len(file_contents), 0)

    @patch('edk2toollib.uefi.UefiFile')
    def test_real_time_clock(self, mock_uefi_file):
        # Test the real-time clock functionality
        mock_uefi_file.return_value = UefiFile('RealTimeClock.c')
        # Assume data for testing
        data = {'clock': 12345}
        # Test the InitializeRealTimeClock function
        self.assertEqual(mock_uefi_file.return_value.InitializeRealTimeClock(data), None)

    def tearDown(self):
        # Clean up test environment
        pass

if __name__ == '__main__':
    unittest.main()
```

This script assumes that the file `RealTimeClock.c` exists in the specified path and contains some data. It tests the existence of the file, the length of its contents, and the functionality of the `InitializeRealTimeClock` function. The `patch` decorator is used to mock the `UefiFile` class for testing purposes.